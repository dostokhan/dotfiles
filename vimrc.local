" spf13 overrides
UnBundle 'kchmck/vim-coffee-script'
UnBundle 'scrooloose/syntastic'
"disable indentation white spaces coloring
let g:indent_guides_enable_on_vim_startup = 0

" wrap long lines
set wrap linebreak nolist

set fileencoding=utf-8
set encoding=utf-8
set nofoldenable
set nospell
colorscheme solarized
set nobackup
set noswapfile


" ##############################
" ### SHORTCUTS ######################
" ##############################
nnorema ; :
" clear highlighted search matches
nmap <slient> ,/ :nohlsearch<CR>
" for saving files which require root privileges"
cmap w!! w !sudo tee % >/dev/null


" ###################
" ### NerdCommenter #
" ###################
let g:NERDSpaceDelims=1
let g:NERDDefaultAlign = 'left'
let g:NERDTrimTraillingWhitespace=1
map <slient ,c :NERDTreeClose<CR>
map <leader>p :NERDTreeCWD



" ##############################
" ### ALE ######################
" ##############################
" Only run linters named in ale_linters settings.
let g:ale_linters_explicit = 1
" Enable ESLint only for JavaScript.
let g:ale_linters = {'javascript': ['eslint'], 'php': ['phpcs']}
let g:ale_fixers = {'php': ['php_cs_fixer']}
" let g:ale_php_phpcs_standard = '~/.phpcs.xml'
" Set this. Airline will handle the rest.
let g:airline#extensions#ale#enabled = 1

" show errors on save
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_open_list = 1
let g:ale_list_window_size = 5


" js-beautify
let g:editorconfig_Beautifier = '~/.editorconfig'

"vim-javascript plugin options
let g:javascript_conceal_null                 = "ø"
let g:javascript_conceal_this                 = "@"
let g:javascript_conceal_return               = "⇚"
let g:javascript_conceal_undefined            = "¿"
let g:javascript_conceal_NaN                  = "ℕ"


autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
autocmd FileType javascript vnoremap <buffer>  <c-f> :call RangeJsBeautify()<cr>
" for json
autocmd FileType json noremap <buffer> <c-f> :call JsonBeautify()<cr>
autocmd FileType json vnoremap <buffer> <c-f> :call RangeJsonBeautify()<cr>
" for jsx
autocmd FileType jsx noremap <buffer> <c-f> :call JsxBeautify()<cr>
autocmd FileType jsx vnoremap <buffer> <c-f> :call RangeJsxBeautify()<cr>
" for html
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
autocmd FileType html vnoremap <buffer> <c-f> :call RangeHtmlBeautify()<cr>
" for css or scss
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>
autocmd FileType css vnoremap <buffer> <c-f> :call RangeCSSBeautify()<cr>


" use javascript-library-syntax
let g:used_javascript_libs = 'jquery,react,redux'
